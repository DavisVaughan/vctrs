% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/order.R
\name{vec_order}
\alias{vec_order}
\alias{vec_sort}
\title{Order and sort vectors}
\usage{
vec_order(x, direction = "asc", na_value = "largest")

vec_sort(x, direction = "asc", na_value = "largest")
}
\arguments{
\item{x}{A vector}

\item{direction}{Direction to sort in.
\itemize{
\item A single \code{"asc"} or \code{"desc"} for ascending or descending order
respectively.
\item For data frames, a length \code{1} or \code{ncol(x)} character vector containing
only \code{"asc"} or \code{"desc"}, specifying the direction for each column.
}}

\item{na_value}{Treatment of \code{NA} values. \code{NaN} values are treated as
equivalent to \code{NA} values.
\itemize{
\item A single \code{"largest"} or \code{"smallest"} for treating \code{NA} values as the
largest or smallest values respectively.
\item For data frames, a length \code{1} or \code{ncol(x)} character vector containing
only \code{"largest"} or \code{"smallest"}, specifying how \code{NA}s should be treated
in each column.
}}
}
\value{
\itemize{
\item \code{vec_order()} an integer vector the same size as \code{x}.
\item \code{vec_sort()} a vector with the same size and type as \code{x}.
}
}
\description{
\code{vec_order()} computes the order of \code{x}. For data frames, the order is
computed along the rows by computing the order of the first column and
using subsequent columns to break ties.

\code{vec_sort()} sorts \code{x} by computing its order and using \code{vec_slice()} to
rearrange.
}
\details{
Character vectors are ordered in the C-locale. This is different from
\code{base::order()}, which respects \code{base::Sys.setlocale()}, but should
produce more reproducible results between different sessions and platforms.
One immediate difference is that ordering is case-sensitive in the C-locale.
Sorting \code{c("b", "C", "a")} with \code{vec_sort()} will return \code{c("C", "a", "b")},
but with \code{base::order()} will return \code{c("a", "b", "C")} unless
\code{base::order(method = "radix")} is explicitly set, which also uses the
C-locale. That said, this typically does not introduce any practical issues.

Character vectors are always translated to UTF-8 before ordering.
}
\section{Dependencies of \code{vec_order()}}{

\itemize{
\item \code{\link[=vec_proxy_order]{vec_proxy_order()}}
}
}

\section{Dependencies of \code{vec_sort()}}{

\itemize{
\item \code{\link[=vec_proxy_order]{vec_proxy_order()}}
\item \code{\link[=vec_order]{vec_order()}}
\item \code{\link[=vec_slice]{vec_slice()}}
}
}

\examples{
x <- round(sample(runif(5), 9, replace = TRUE), 3)
x <- c(x, NA)

vec_order(x)
vec_sort(x)
vec_sort(x, "desc")

# Can also handle data frames
df <- data.frame(g = sample(2, 10, replace = TRUE), x = x)
vec_order(df)
vec_sort(df)
vec_sort(df, "desc")

# For data frames, `direction` and `na_value` are allowed to be vectors
# with length equal to the number of columns in the data frame
vec_sort(
  df,
  direction = c("desc", "asc"),
  na_value = c("largest", "smallest")
)
}
