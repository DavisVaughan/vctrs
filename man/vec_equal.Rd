% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/equal.R
\name{vec_equal}
\alias{vec_equal}
\alias{vec_equal_na}
\alias{vec_equal_all}
\title{Test if two vectors are equal}
\usage{
vec_equal(x, y, na_equal = FALSE, .ptype = NULL)

vec_equal_na(x)

vec_equal_all(x, y = NULL, na_equal = FALSE, ptype = NULL)
}
\arguments{
\item{x}{Vectors with compatible types and lengths.}

\item{y}{Vectors with compatible types and lengths.}

\item{na_equal}{Should \code{NA} values be considered equal?}

\item{.ptype}{Override to optionally specify common type}

\item{ptype}{Override to optionally specify common type}
}
\value{
\itemize{
\item \code{vec_equal()}: a logical vector the same size as the common size of \code{x}
and \code{y}. It will only contain \code{NA}s if \code{na_equal} is \code{FALSE}.
\item \code{vec_equal_na()}: a logical vector the same size as \code{x}.
\item \code{vec_equal_all()}: a logical vector of size 1. It can only be
\code{NA} if \code{na_equal} is \code{FALSE}.
}
}
\description{
\code{vec_equal_na()} tests a special case: equality with \code{NA}. It is similar to
\link{is.na} but:
\itemize{
\item Considers the missing element of a list to be \code{NULL}.
\item Considered data frames and records to be missing if every component
is missing.
This preserves the invariant that \code{vec_equal_na(x)} is equal to
\code{vec_equal(x, vec_init(x), na_equal = TRUE)}.
}

\code{vec_equal_all()} tests if all elements are equal between two vectors. If
only \code{x} is supplied, it tests if all elements are equal within \code{x}.
}
\examples{
vec_equal(c(TRUE, FALSE, NA), FALSE)
vec_equal(c(TRUE, FALSE, NA), FALSE, na_equal = TRUE)
vec_equal_na(c(TRUE, FALSE, NA))

vec_equal(5, 1:10)
vec_equal("d", letters[1:10])

df <- data.frame(x = c(1, 1, 2, 1, NA), y = c(1, 2, 1, NA, NA))
vec_equal(df, data.frame(x = 1, y = 2))
vec_equal_na(df)

vec_equal_all(c(1, 1))
vec_equal_all(c(1, 2))
vec_equal_all(c(1, 2), c(1, 2))

vec_equal_all(c(1, NA), c(1, NA))
vec_equal_all(c(1, NA), c(1, NA), na_equal = TRUE)
}
